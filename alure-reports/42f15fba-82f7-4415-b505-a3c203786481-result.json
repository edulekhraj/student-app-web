{"name": "test_sub_learn_chapters", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"eds-btn eds-btn--primary eds-btn--capsular eds-btn--md\" style=\"padding: 0.5rem 1rem;\">...</button> is not clickable at point (99, 19). Other element would receive the click: <img class=\"embibe-logo\" alt=\"\" src=\"https://assets.embibe.com/production/web-assets/assets/images/embibeLogo.svg\">\n  (Session info: MicrosoftEdge=117.0.2045.35)\nStacktrace:\n0   msedgedriver                        0x0000000103163a10 msedgedriver + 4160016\n1   msedgedriver                        0x000000010315bad0 msedgedriver + 4127440\n2   msedgedriver                        0x0000000102da5338 msedgedriver + 234296\n3   msedgedriver                        0x0000000102de1474 msedgedriver + 480372\n4   msedgedriver                        0x0000000102de01c4 msedgedriver + 475588\n5   msedgedriver                        0x0000000102ddea70 msedgedriver + 469616\n6   msedgedriver                        0x0000000102dde2ec msedgedriver + 467692\n7   msedgedriver                        0x0000000102dd67e0 msedgedriver + 436192\n8   msedgedriver                        0x0000000102dd6250 msedgedriver + 434768\n9   msedgedriver                        0x0000000102e09650 msedgedriver + 644688\n10  msedgedriver                        0x0000000102dd4d04 msedgedriver + 429316\n11  msedgedriver                        0x0000000102dd5bb8 msedgedriver + 433080\n12  msedgedriver                        0x0000000103132070 msedgedriver + 3956848\n13  msedgedriver                        0x00000001031356cc msedgedriver + 3970764\n14  msedgedriver                        0x00000001031351bc msedgedriver + 3969468\n15  msedgedriver                        0x000000010313a500 msedgedriver + 3990784\n16  msedgedriver                        0x0000000103135d7c msedgedriver + 3972476\n17  msedgedriver                        0x000000010311861c msedgedriver + 3851804\n18  msedgedriver                        0x000000010314d47c msedgedriver + 4068476\n19  msedgedriver                        0x000000010314d5a8 msedgedriver + 4068776\n20  msedgedriver                        0x000000010315ad5c msedgedriver + 4123996\n21  libsystem_pthread.dylib             0x000000018b0fef94 _pthread_start + 136\n22  libsystem_pthread.dylib             0x000000018b0f9d34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x103978c90>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.xfail\n    def test_sub_learn_chapters(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        learn = LearnHomePage(self.driver)\n>       learn.sub_learn_chapter()\n\nTest/test_E2E.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/learn_home_page.py:314: in sub_learn_chapter\n    self.play_video_button()\nPageObject/learn_home_page.py:655: in play_video_button\n    self.driver.find_element(*LearnHomePage.learn_button).click()\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x103ca0f10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...00018b0fef94 _pthread_start + 136\\\\n22  libsystem_pthread.dylib             0x000000018b0f9d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"eds-btn eds-btn--primary eds-btn--capsular eds-btn--md\" style=\"padding: 0.5rem 1rem;\">...</button> is not clickable at point (99, 19). Other element would receive the click: <img class=\"embibe-logo\" alt=\"\" src=\"https://assets.embibe.com/production/web-assets/assets/images/embibeLogo.svg\">\nE         (Session info: MicrosoftEdge=117.0.2045.35)\nE       Stacktrace:\nE       0   msedgedriver                        0x0000000103163a10 msedgedriver + 4160016\nE       1   msedgedriver                        0x000000010315bad0 msedgedriver + 4127440\nE       2   msedgedriver                        0x0000000102da5338 msedgedriver + 234296\nE       3   msedgedriver                        0x0000000102de1474 msedgedriver + 480372\nE       4   msedgedriver                        0x0000000102de01c4 msedgedriver + 475588\nE       5   msedgedriver                        0x0000000102ddea70 msedgedriver + 469616\nE       6   msedgedriver                        0x0000000102dde2ec msedgedriver + 467692\nE       7   msedgedriver                        0x0000000102dd67e0 msedgedriver + 436192\nE       8   msedgedriver                        0x0000000102dd6250 msedgedriver + 434768\nE       9   msedgedriver                        0x0000000102e09650 msedgedriver + 644688\nE       10  msedgedriver                        0x0000000102dd4d04 msedgedriver + 429316\nE       11  msedgedriver                        0x0000000102dd5bb8 msedgedriver + 433080\nE       12  msedgedriver                        0x0000000103132070 msedgedriver + 3956848\nE       13  msedgedriver                        0x00000001031356cc msedgedriver + 3970764\nE       14  msedgedriver                        0x00000001031351bc msedgedriver + 3969468\nE       15  msedgedriver                        0x000000010313a500 msedgedriver + 3990784\nE       16  msedgedriver                        0x0000000103135d7c msedgedriver + 3972476\nE       17  msedgedriver                        0x000000010311861c msedgedriver + 3851804\nE       18  msedgedriver                        0x000000010314d47c msedgedriver + 4068476\nE       19  msedgedriver                        0x000000010314d5a8 msedgedriver + 4068776\nE       20  msedgedriver                        0x000000010315ad5c msedgedriver + 4123996\nE       21  libsystem_pthread.dylib             0x000000018b0fef94 _pthread_start + 136\nE       22  libsystem_pthread.dylib             0x000000018b0f9d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "log", "source": "1ed3eabf-13ca-4f46-af36-c26d7bcc7924-attachment.txt", "type": "text/plain"}], "start": 1747731729829, "stop": 1747731867762, "uuid": "da8b4cef-493b-4e8d-8177-ac8a3035c768", "historyId": "450e0cc3138b977396a4aa757e91cbbe", "testCaseId": "450e0cc3138b977396a4aa757e91cbbe", "fullName": "Test.test_E2E.TestEmbibe#test_sub_learn_chapters", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "LM0010069"}, {"name": "thread", "value": "8101-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}