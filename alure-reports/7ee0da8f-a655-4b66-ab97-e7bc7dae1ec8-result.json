{"name": "test_play_bookmark_videos", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   msedgedriver                        0x00000001047a7a10 msedgedriver + 4160016\n1   msedgedriver                        0x000000010479fad0 msedgedriver + 4127440\n2   msedgedriver                        0x00000001043e9338 msedgedriver + 234296\n3   msedgedriver                        0x0000000104421310 msedgedriver + 463632\n4   msedgedriver                        0x000000010444d650 msedgedriver + 644688\n5   msedgedriver                        0x0000000104418d04 msedgedriver + 429316\n6   msedgedriver                        0x0000000104419bb8 msedgedriver + 433080\n7   msedgedriver                        0x0000000104776070 msedgedriver + 3956848\n8   msedgedriver                        0x00000001047796cc msedgedriver + 3970764\n9   msedgedriver                        0x00000001047791bc msedgedriver + 3969468\n10  msedgedriver                        0x000000010477e500 msedgedriver + 3990784\n11  msedgedriver                        0x0000000104779d7c msedgedriver + 3972476\n12  msedgedriver                        0x000000010475c61c msedgedriver + 3851804\n13  msedgedriver                        0x000000010479147c msedgedriver + 4068476\n14  msedgedriver                        0x00000001047915a8 msedgedriver + 4068776\n15  msedgedriver                        0x000000010479ed5c msedgedriver + 4123996\n16  libsystem_pthread.dylib             0x000000018b0fef94 _pthread_start + 136\n17  libsystem_pthread.dylib             0x000000018b0f9d34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x10399bd90>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.home\n    def test_play_bookmark_videos(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        UH = UserHome(self.driver)\n>       UH.play_bookmark_video()\n\nTest/test_E2E.py:493: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/user_home.py:160: in play_bookmark_video\n    self.click_element(UserHome.play_all_btn)\nPageObject/user_home.py:59: in click_element\n    WebDriverWait(self.driver, timeout).until(EC.element_to_be_clickable(locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9811786bf9935d84a7475fdd8ad7edc0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x1039d0e00>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   msedgedriver                        0x00000001047a7a10 msedgedriver + 4160016\nE       1   msedgedriver                        0x000000010479fad0 msedgedriver + 4127440\nE       2   msedgedriver                        0x00000001043e9338 msedgedriver + 234296\nE       3   msedgedriver                        0x0000000104421310 msedgedriver + 463632\nE       4   msedgedriver                        0x000000010444d650 msedgedriver + 644688\nE       5   msedgedriver                        0x0000000104418d04 msedgedriver + 429316\nE       6   msedgedriver                        0x0000000104419bb8 msedgedriver + 433080\nE       7   msedgedriver                        0x0000000104776070 msedgedriver + 3956848\nE       8   msedgedriver                        0x00000001047796cc msedgedriver + 3970764\nE       9   msedgedriver                        0x00000001047791bc msedgedriver + 3969468\nE       10  msedgedriver                        0x000000010477e500 msedgedriver + 3990784\nE       11  msedgedriver                        0x0000000104779d7c msedgedriver + 3972476\nE       12  msedgedriver                        0x000000010475c61c msedgedriver + 3851804\nE       13  msedgedriver                        0x000000010479147c msedgedriver + 4068476\nE       14  msedgedriver                        0x00000001047915a8 msedgedriver + 4068776\nE       15  msedgedriver                        0x000000010479ed5c msedgedriver + 4123996\nE       16  libsystem_pthread.dylib             0x000000018b0fef94 _pthread_start + 136\nE       17  libsystem_pthread.dylib             0x000000018b0f9d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "77fc9cbe-02d9-434d-bbd3-4a4687fefd39-attachment.txt", "type": "text/plain"}], "start": 1747733462325, "stop": 1747733489258, "uuid": "a10d4402-2e6d-44f2-bfc2-74bb378a0f1f", "historyId": "210b9ecf421bba33523c3699282e7534", "testCaseId": "210b9ecf421bba33523c3699282e7534", "fullName": "Test.test_E2E.TestEmbibe#test_play_bookmark_videos", "labels": [{"name": "tag", "value": "home"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "LM0010069"}, {"name": "thread", "value": "8101-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}