{"name": "test_click_test_card_deeplink", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001049843bc cxxbridge1$str$ptr + 2829900\n1   chromedriver                        0x000000010497c684 cxxbridge1$str$ptr + 2797844\n2   chromedriver                        0x00000001044b9fbc cxxbridge1$string$len + 90140\n3   chromedriver                        0x00000001045011bc cxxbridge1$string$len + 381468\n4   chromedriver                        0x0000000104542044 cxxbridge1$string$len + 647332\n5   chromedriver                        0x00000001044f53f8 cxxbridge1$string$len + 332888\n6   chromedriver                        0x00000001049487e0 cxxbridge1$str$ptr + 2585200\n7   chromedriver                        0x000000010494bab0 cxxbridge1$str$ptr + 2598208\n8   chromedriver                        0x0000000104929db4 cxxbridge1$str$ptr + 2459716\n9   chromedriver                        0x000000010494c328 cxxbridge1$str$ptr + 2600376\n10  chromedriver                        0x000000010491b640 cxxbridge1$str$ptr + 2400464\n11  chromedriver                        0x000000010496c28c cxxbridge1$str$ptr + 2731292\n12  chromedriver                        0x000000010496c418 cxxbridge1$str$ptr + 2731688\n13  chromedriver                        0x000000010497c2d0 cxxbridge1$str$ptr + 2796896\n14  libsystem_pthread.dylib             0x00000001835e2f94 _pthread_start + 136\n15  libsystem_pthread.dylib             0x00000001835ddd34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x104ca9690>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.deeplink\n    def test_click_test_card_deeplink(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        monet = EmbibeMonetisation(self.driver)\n>       monet.click_test_button()\n\nTest/test_E2E.py:631: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/monetisation.py:188: in click_test_button\n    self.wait_for_visibility((By.XPATH, \"//button[@class='eds-btn eds-btn--primary eds-btn--capsular eds-btn--md']\")).is_displayed()\nPageObject/monetisation.py:43: in wait_for_visibility\n    return self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f264dbfe396a6f3981f424ccf506e301\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10583f1a0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001049843bc cxxbridge1$str$ptr + 2829900\nE       1   chromedriver                        0x000000010497c684 cxxbridge1$str$ptr + 2797844\nE       2   chromedriver                        0x00000001044b9fbc cxxbridge1$string$len + 90140\nE       3   chromedriver                        0x00000001045011bc cxxbridge1$string$len + 381468\nE       4   chromedriver                        0x0000000104542044 cxxbridge1$string$len + 647332\nE       5   chromedriver                        0x00000001044f53f8 cxxbridge1$string$len + 332888\nE       6   chromedriver                        0x00000001049487e0 cxxbridge1$str$ptr + 2585200\nE       7   chromedriver                        0x000000010494bab0 cxxbridge1$str$ptr + 2598208\nE       8   chromedriver                        0x0000000104929db4 cxxbridge1$str$ptr + 2459716\nE       9   chromedriver                        0x000000010494c328 cxxbridge1$str$ptr + 2600376\nE       10  chromedriver                        0x000000010491b640 cxxbridge1$str$ptr + 2400464\nE       11  chromedriver                        0x000000010496c28c cxxbridge1$str$ptr + 2731292\nE       12  chromedriver                        0x000000010496c418 cxxbridge1$str$ptr + 2731688\nE       13  chromedriver                        0x000000010497c2d0 cxxbridge1$str$ptr + 2796896\nE       14  libsystem_pthread.dylib             0x00000001835e2f94 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x00000001835ddd34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "a28770dd-0af2-4400-bbc7-88370b599176-attachment.txt", "type": "text/plain"}], "start": 1747208001293, "stop": 1747208029669, "uuid": "44ee3ed6-9481-46f8-a43a-2fc02ee5d204", "historyId": "bc6f87a7a7d38e93d7fbebcf9c44c144", "testCaseId": "bc6f87a7a7d38e93d7fbebcf9c44c144", "fullName": "Test.test_E2E.TestEmbibe#test_click_test_card_deeplink", "labels": [{"name": "tag", "value": "deeplink"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "LM0010069"}, {"name": "thread", "value": "29858-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}