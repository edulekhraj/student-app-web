{"name": "test_watch_past_live_class", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000104ed7184 cxxbridge1$str$ptr + 3626716\n1   chromedriver                        0x0000000104ecf9d4 cxxbridge1$str$ptr + 3596076\n2   chromedriver                        0x000000010493c968 cxxbridge1$string$len + 89228\n3   chromedriver                        0x0000000104980d50 cxxbridge1$string$len + 368756\n4   chromedriver                        0x00000001049ba5b4 cxxbridge1$string$len + 604376\n5   chromedriver                        0x0000000104975568 cxxbridge1$string$len + 321676\n6   chromedriver                        0x00000001049761b8 cxxbridge1$string$len + 324828\n7   chromedriver                        0x0000000104ea29ac cxxbridge1$str$ptr + 3411716\n8   chromedriver                        0x0000000104ea5ccc cxxbridge1$str$ptr + 3424804\n9   chromedriver                        0x0000000104e8986c cxxbridge1$str$ptr + 3308996\n10  chromedriver                        0x0000000104ea658c cxxbridge1$str$ptr + 3427044\n11  chromedriver                        0x0000000104e7b09c cxxbridge1$str$ptr + 3249652\n12  chromedriver                        0x0000000104ec04b8 cxxbridge1$str$ptr + 3533328\n13  chromedriver                        0x0000000104ec0634 cxxbridge1$str$ptr + 3533708\n14  chromedriver                        0x0000000104ecf648 cxxbridge1$str$ptr + 3595168\n15  libsystem_pthread.dylib             0x0000000194d6af94 _pthread_start + 136\n16  libsystem_pthread.dylib             0x0000000194d65d34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x102b2cb10>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.home\n    def test_watch_past_live_class(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        UH = UserHome(self.driver)\n>       UH.watch_past_live_class()\n\nTest/test_E2E.py:475: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/user_home.py:98: in watch_past_live_class\n    self.click_element(UserHome.live_class_watch_recording_btn)\nPageObject/user_home.py:59: in click_element\n    WebDriverWait(self.driver, timeout).until(EC.element_to_be_clickable(locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b3ecf3e1548514ff7b9a5510dd822197\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x102cf99e0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104ed7184 cxxbridge1$str$ptr + 3626716\nE       1   chromedriver                        0x0000000104ecf9d4 cxxbridge1$str$ptr + 3596076\nE       2   chromedriver                        0x000000010493c968 cxxbridge1$string$len + 89228\nE       3   chromedriver                        0x0000000104980d50 cxxbridge1$string$len + 368756\nE       4   chromedriver                        0x00000001049ba5b4 cxxbridge1$string$len + 604376\nE       5   chromedriver                        0x0000000104975568 cxxbridge1$string$len + 321676\nE       6   chromedriver                        0x00000001049761b8 cxxbridge1$string$len + 324828\nE       7   chromedriver                        0x0000000104ea29ac cxxbridge1$str$ptr + 3411716\nE       8   chromedriver                        0x0000000104ea5ccc cxxbridge1$str$ptr + 3424804\nE       9   chromedriver                        0x0000000104e8986c cxxbridge1$str$ptr + 3308996\nE       10  chromedriver                        0x0000000104ea658c cxxbridge1$str$ptr + 3427044\nE       11  chromedriver                        0x0000000104e7b09c cxxbridge1$str$ptr + 3249652\nE       12  chromedriver                        0x0000000104ec04b8 cxxbridge1$str$ptr + 3533328\nE       13  chromedriver                        0x0000000104ec0634 cxxbridge1$str$ptr + 3533708\nE       14  chromedriver                        0x0000000104ecf648 cxxbridge1$str$ptr + 3595168\nE       15  libsystem_pthread.dylib             0x0000000194d6af94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x0000000194d65d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "7b18d92d-3471-41bf-b352-b160434f2163-attachment.txt", "type": "text/plain"}], "start": 1736250939876, "stop": 1736250971620, "uuid": "255aa98f-bce6-4a74-a798-620db65db5e3", "historyId": "e4beeb3c665af5dda8959dc6b2b8a3d2", "testCaseId": "e4beeb3c665af5dda8959dc6b2b8a3d2", "fullName": "Test.test_E2E.TestEmbibe#test_watch_past_live_class", "labels": [{"name": "tag", "value": "home"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "EBL-C02H385BQ6L4.local"}, {"name": "thread", "value": "30561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}