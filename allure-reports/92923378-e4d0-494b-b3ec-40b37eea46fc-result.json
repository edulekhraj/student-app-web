{"name": "test_practice_author_books", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"i[class='demo-icon demo-icon--filled demo-icon--sm Title_endSessionIcon__2QErK']\"}\n  (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x000000010119ea54 cxxbridge1$str$ptr + 2803960\n1   chromedriver                        0x0000000101196cf0 cxxbridge1$str$ptr + 2771860\n2   chromedriver                        0x0000000100ce2864 cxxbridge1$string$len + 93028\n3   chromedriver                        0x0000000100d29410 cxxbridge1$string$len + 382736\n4   chromedriver                        0x0000000100d6a480 cxxbridge1$string$len + 649088\n5   chromedriver                        0x0000000100d1d7ec cxxbridge1$string$len + 334572\n6   chromedriver                        0x0000000101163ccc cxxbridge1$str$ptr + 2562928\n7   chromedriver                        0x0000000101166f98 cxxbridge1$str$ptr + 2575932\n8   chromedriver                        0x00000001011442c4 cxxbridge1$str$ptr + 2433384\n9   chromedriver                        0x0000000101167810 cxxbridge1$str$ptr + 2578100\n10  chromedriver                        0x00000001011352f0 cxxbridge1$str$ptr + 2371988\n11  chromedriver                        0x000000010118757c cxxbridge1$str$ptr + 2708512\n12  chromedriver                        0x0000000101187708 cxxbridge1$str$ptr + 2708908\n13  chromedriver                        0x000000010119693c cxxbridge1$str$ptr + 2770912\n14  libsystem_pthread.dylib             0x000000018466ef94 _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000184669d34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x1069fa810>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.practice\n    def test_practice_author_books(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        ph = PracticeHomePage(self.driver)\n>       ph.author_books()\n\nTest/test_E2E.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/practice_home_page.py:55: in author_books\n    self.practice_taking()\nPageObject/practice_home_page.py:205: in practice_taking\n    self.driver.find_element(By.CSS_SELECTOR,\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106dc35d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018466ef94 _pthread_start + 136\\\\n15  libsystem_pthread.dylib             0x0000000184669d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"i[class='demo-icon demo-icon--filled demo-icon--sm Title_endSessionIcon__2QErK']\"}\nE         (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010119ea54 cxxbridge1$str$ptr + 2803960\nE       1   chromedriver                        0x0000000101196cf0 cxxbridge1$str$ptr + 2771860\nE       2   chromedriver                        0x0000000100ce2864 cxxbridge1$string$len + 93028\nE       3   chromedriver                        0x0000000100d29410 cxxbridge1$string$len + 382736\nE       4   chromedriver                        0x0000000100d6a480 cxxbridge1$string$len + 649088\nE       5   chromedriver                        0x0000000100d1d7ec cxxbridge1$string$len + 334572\nE       6   chromedriver                        0x0000000101163ccc cxxbridge1$str$ptr + 2562928\nE       7   chromedriver                        0x0000000101166f98 cxxbridge1$str$ptr + 2575932\nE       8   chromedriver                        0x00000001011442c4 cxxbridge1$str$ptr + 2433384\nE       9   chromedriver                        0x0000000101167810 cxxbridge1$str$ptr + 2578100\nE       10  chromedriver                        0x00000001011352f0 cxxbridge1$str$ptr + 2371988\nE       11  chromedriver                        0x000000010118757c cxxbridge1$str$ptr + 2708512\nE       12  chromedriver                        0x0000000101187708 cxxbridge1$str$ptr + 2708908\nE       13  chromedriver                        0x000000010119693c cxxbridge1$str$ptr + 2770912\nE       14  libsystem_pthread.dylib             0x000000018466ef94 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000184669d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "ee86ff19-a196-4c4b-9708-b8180e1a82a4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "1f9a16f5-a426-4191-8082-f9a2615d120d-attachment.txt", "type": "text/plain"}], "start": 1746170518253, "stop": 1746170620431, "uuid": "aee04ca0-6633-4d9e-bc1b-6a0a850d1d75", "historyId": "226dc780cdb5b95d6449cf24ebb06156", "testCaseId": "226dc780cdb5b95d6449cf24ebb06156", "fullName": "Test.test_E2E.TestEmbibe#test_practice_author_books", "labels": [{"name": "tag", "value": "practice"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "EBL-C02H385BQ6L4.local"}, {"name": "thread", "value": "19446-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}