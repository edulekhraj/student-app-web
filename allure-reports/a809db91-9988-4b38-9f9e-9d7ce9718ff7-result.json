{"name": "test_create_PAJ_journey", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[to='/learn/home']\"}\n  (Session info: chrome=131.0.6778.205); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000100f5b184 cxxbridge1$str$ptr + 3626716\n1   chromedriver                        0x0000000100f539d4 cxxbridge1$str$ptr + 3596076\n2   chromedriver                        0x00000001009c0968 cxxbridge1$string$len + 89228\n3   chromedriver                        0x0000000100a04d50 cxxbridge1$string$len + 368756\n4   chromedriver                        0x0000000100a3e5b4 cxxbridge1$string$len + 604376\n5   chromedriver                        0x00000001009f9568 cxxbridge1$string$len + 321676\n6   chromedriver                        0x00000001009fa1b8 cxxbridge1$string$len + 324828\n7   chromedriver                        0x0000000100f269ac cxxbridge1$str$ptr + 3411716\n8   chromedriver                        0x0000000100f29ccc cxxbridge1$str$ptr + 3424804\n9   chromedriver                        0x0000000100f0d86c cxxbridge1$str$ptr + 3308996\n10  chromedriver                        0x0000000100f2a58c cxxbridge1$str$ptr + 3427044\n11  chromedriver                        0x0000000100eff09c cxxbridge1$str$ptr + 3249652\n12  chromedriver                        0x0000000100f444b8 cxxbridge1$str$ptr + 3533328\n13  chromedriver                        0x0000000100f44634 cxxbridge1$str$ptr + 3533708\n14  chromedriver                        0x0000000100f53648 cxxbridge1$str$ptr + 3595168\n15  libsystem_pthread.dylib             0x0000000194d6af94 _pthread_start + 136\n16  libsystem_pthread.dylib             0x0000000194d65d34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x102b40d90>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.achieve\n    def test_create_PAJ_journey(self):\n        log = self.getLogger()\n>       self.test_sign_in_password()\n\nTest/test_E2E.py:713: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTest/test_E2E.py:22: in test_sign_in_password\n    login.test_sign_in_password()\nPageObject/signUp_signIn.py:95: in test_sign_in_password\n    self.driver.find_element(*signIn_up.learn_module).click()\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x102ce5e90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...000194d6af94 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x0000000194d65d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[to='/learn/home']\"}\nE         (Session info: chrome=131.0.6778.205); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100f5b184 cxxbridge1$str$ptr + 3626716\nE       1   chromedriver                        0x0000000100f539d4 cxxbridge1$str$ptr + 3596076\nE       2   chromedriver                        0x00000001009c0968 cxxbridge1$string$len + 89228\nE       3   chromedriver                        0x0000000100a04d50 cxxbridge1$string$len + 368756\nE       4   chromedriver                        0x0000000100a3e5b4 cxxbridge1$string$len + 604376\nE       5   chromedriver                        0x00000001009f9568 cxxbridge1$string$len + 321676\nE       6   chromedriver                        0x00000001009fa1b8 cxxbridge1$string$len + 324828\nE       7   chromedriver                        0x0000000100f269ac cxxbridge1$str$ptr + 3411716\nE       8   chromedriver                        0x0000000100f29ccc cxxbridge1$str$ptr + 3424804\nE       9   chromedriver                        0x0000000100f0d86c cxxbridge1$str$ptr + 3308996\nE       10  chromedriver                        0x0000000100f2a58c cxxbridge1$str$ptr + 3427044\nE       11  chromedriver                        0x0000000100eff09c cxxbridge1$str$ptr + 3249652\nE       12  chromedriver                        0x0000000100f444b8 cxxbridge1$str$ptr + 3533328\nE       13  chromedriver                        0x0000000100f44634 cxxbridge1$str$ptr + 3533708\nE       14  chromedriver                        0x0000000100f53648 cxxbridge1$str$ptr + 3595168\nE       15  libsystem_pthread.dylib             0x0000000194d6af94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x0000000194d65d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "start": 1736250974181, "stop": 1736250999020, "uuid": "b9d76a3d-65b1-4458-8f77-19eaec67d6c4", "historyId": "607e389147c39aa2547cd1da42e39458", "testCaseId": "607e389147c39aa2547cd1da42e39458", "fullName": "Test.test_E2E.TestEmbibe#test_create_PAJ_journey", "labels": [{"name": "tag", "value": "achieve"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "EBL-C02H385BQ6L4.local"}, {"name": "thread", "value": "30561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}